# AUTOGENERATED! DO NOT EDIT! File to edit: text.ipynb (unless otherwise specified).

__all__ = ['STRING_FUNCS', 'text_to_vector', 'create_index', 'query_index']

# Cell
from fastcore.basics import listify
import faiss
from typing import List

# Cell
STRING_FUNCS = ["capitalize", "count", "isalnum", "isalpha", "isascii", "isdecimal", "isdigit", "isidentifier", "islower",
                "isnumeric", "isspace", "istitle", "isupper", "lower", "lstrip", "replace", "rstrip", "split", "strip", "upper"]

# Cell
# TODO: add convert so that i automatically converts a string/np array/dataframe/tensor into a list
def text_to_vector(text_form, embedder):
    embeddings = embedder.encode(text_form, convert_to_tensor=True)
    return embeddings.cpu().detach().numpy()

# Cell
def create_index(vectors):
    faiss_index = faiss.IndexFlatL2(len(vectors[0]))
    faiss_index.add(vectors)

#     print(faiss_index.ntotal)

    return faiss_index

# Cell
def query_index(text, embedder, target_list, index, with_distance=False, k=10):
    embedding = embedder.encode([text])
    distances, indices = index.search(embedding, k)
    if with_distance:
        return [(target_list[index], distances[0][i]) for i, index in enumerate(indices[0])]
    return [target_list[i] for i in indices[0]]